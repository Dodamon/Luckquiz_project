spring:
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://k8a707.p.ssafy.io:3306/luckquiz?characterEncoding=UTF-8&serverTimezone=Asia/Seoul
    username: eodrms
    password: eodrms

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: false #To beautify or pretty print the SQL
        show_sql: false #show sql
  cloud:
    gcp:
      storage:
        bucket: luckquiz
        project-id: snappy-analog-384101
        credentials:
          location: classpath:snappy-analog-384101-5ff843401827.json
  cache:
    type: redis
    redis:
      time-to-live: 5000
      cache-null-values: false
      host: k8a707.p.ssafy.io
      port: 3307
  kafka:
    bootstrap-servers:
      - http://k8a707.p.ssafy.io:9091
      - http://k8a707.p.ssafy.io:9092
      - http://k8a707.p.ssafy.io:9093
    consumer:
      # consumer bootstrap servers가 따로 존재하면 설정
#      bootstrap-servers: http://k8a707.p.ssafy.io:9091, http://k8a707.p.ssafy.io:9092, http://k8a707.p.ssafy.io:9093
      group-id: test
      # 식별 가능한 Consumer Group Id

      # Kafka 서버에 초기 offset이 없거나, 서버에 현재 offset이 더 이상 존재하지 않을 경우 수행할 작업을 설정
      # latest: 가장 최근에 생산된 메시지로 offeset reset
      # earliest: 가장 오래된 메시지로 offeset reset
      # none: offset 정보가 없으면 Exception 발생
      auto-offset-reset: latest
      # 데이터를 받아올 때, key/value를 역직렬화
      # JSON 데이터를 받아올 것이라면 JsonDeserializer
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      # producer bootstrap servers가 따로 존재하면 설정
      # bootstrap-servers: 3.34.97.97:9092

      # 데이터를 보낼 때, key/value를 직렬화
      # JSON 데이터를 보낼 것이라면 JsonDeserializer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

server:
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true
